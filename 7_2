#This program solves the Lotka-Volterra equations for the case
#alpha=1, beta=0.5, gamma=0.5 and delta=2,with the initial condition x=y=2 
#using the fourth-order Runge Kutta method.

from pylab import*
from numpy import *

A =1.0      #alfa
B = 0.5     # beta
G = 0.5     #gamma
D = 2.0     #delta


def f(r,t):
    x = r[0]
    y = r[1]
    fx = A*x - B*x*y
    fy = G*x*y - D*y
    return array([fx,fy],float)


a = 0.0
b = 30.0
N = 1000
h = (b-a)/N

tpoints = arange(a,b,h)
xpoints = []
ypoints = []

r=array([2.0, 2.0],float)

for t in tpoints:
    xpoints.append(r[0])
    ypoints.append(r[1])
    k1 = h*f(r,t)
    k2 = h*f(r+0.5*k1,t+0.5*h)
    k3 = h*f(r+0.5*k2,t+0.5*h)
    k4 = h*f(r+k3,t+h)
    r += (k1+2.0*k2+2*k3+k4)/6.0

plot(tpoints,xpoints,'k',label="x(t)")
plot(tpoints,ypoints,'r',label="y(t)")
xlabel("t")
xticks(fontsize=20)
yticks(fontsize=20)
legend(loc='upper right')
show()
